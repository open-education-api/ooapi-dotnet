# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow helps you trigger a SonarCloud analysis of your code and populates
# GitHub Code Scanning alerts with the vulnerabilities found.
# Free for open source project.

# 1. Login to SonarCloud.io using your GitHub account

# 2. Import your project on SonarCloud
#     * Add your GitHub organization first, then add your repository as a new project.
#     * Please note that many languages are eligible for automatic analysis,
#       which means that the analysis will start automatically without the need to set up GitHub Actions.
#     * This behavior can be changed in Administration > Analysis Method.
#
# 3. Follow the SonarCloud in-product tutorial
#     * a. Copy/paste the Project Key and the Organization Key into the args parameter below
#          (You'll find this information in SonarCloud. Click on "Information" at the bottom left)
#
#     * b. Generate a new token and add it to your Github repository's secrets using the name SONAR_TOKEN
#          (On SonarCloud, click on your avatar on top-right > My account > Security
#           or go directly to https://sonarcloud.io/account/security/)

# Feel free to take a look at our documentation (https://docs.sonarcloud.io/getting-started/github/)
# or reach out to our community forum if you need some help (https://community.sonarsource.com/c/help/sc/9)

name: SonarCloud analysis

on:
  push:
    branches: [ "main", "han-main" ]
  pull_request:
    branches: [ "main", "han-main" ]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:
  job:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
  
      - uses: actions/setup-java@v3 #sonar scanner requires jdk
        with:
          distribution: 'microsoft'
          java-version: '17'

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Install dotnet-sonarscanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: install dotnet-coverage
        run: dotnet tool install --global dotnet-coverage

      - name: dotnet restore
        run: dotnet restore ./v5/ooapi.v5.sln

      - name: dotnet build,test and sonar analyze
        run: |
            dotnet sonarscanner begin \
            -k:"open-education-api_ooapi-dotnet" \
            -o:"open-education-api" \
            -d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            -d:sonar.host.url="https://sonarcloud.io/" \
            -d:sonar.exclusions="**/ooapi.v5.core/Migrations/*" \
            -d:sonar.cpd.exclusions="**/ooapi.v5.core/Migrations/*, **/ooapi.v5.core/Models/*" \
            -d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
            dotnet build ./v5/ooapi.v5.sln --no-restore
            dotnet-coverage collect -s "dotnetcoverage.runsettings.xml" -f xml -o "coverage.xml" "dotnet test ./v5 --no-build"
            dotnet sonarscanner end -d:sonar.token="${{ secrets.SONAR_TOKEN }}"