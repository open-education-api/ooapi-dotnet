// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ooapi.v5.core.Repositories;

#nullable disable

namespace ooapi.v5.core.Migrations
{
    [DbContext(typeof(CoreDBContext))]
    [Migration("20221223101035_addedParentId-To-OtherModels")]
    partial class addedParentIdToOtherModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ooapiv5")
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ooapi.v5.Models.AcademicSession", b =>
                {
                    b.Property<Guid>("AcademicSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AcademicSessionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PrimaryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryCodeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AcademicSessionId");

                    b.ToTable("AcademicSessions", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.Address", b =>
                {
                    b.Property<Guid?>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Additional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AddressType")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Latitude")
                        .HasPrecision(8, 6)
                        .HasColumnType("decimal(8,6)");

                    b.Property<decimal?>("Longitude")
                        .HasPrecision(8, 6)
                        .HasColumnType("decimal(8,6)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.Association", b =>
                {
                    b.Property<Guid>("AssociationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AssociationType")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RemoteState")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("AssociationId");

                    b.ToTable("Associations", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.Building", b =>
                {
                    b.Property<Guid>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryCodeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BuildingId");

                    b.HasIndex("AddressId");

                    b.ToTable("Buildings", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.Component", b =>
                {
                    b.Property<Guid?>("ComponentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Assessment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComponentType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Enrollment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModeOfDelivery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryCodeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeachingLanguage")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("ComponentId");

                    b.ToTable("Components", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.ComponentAddress", b =>
                {
                    b.Property<Guid>("ComponentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ComponentId", "AddressId");

                    b.HasIndex("AddressId");

                    b.ToTable("ComponentsAddresses", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.ComponentOffering", b =>
                {
                    b.Property<Guid>("OfferingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EnrollEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EnrollStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EnrolledNumberStudents")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("MaxNumberStudents")
                        .HasColumnType("int");

                    b.Property<int?>("MinNumberStudents")
                        .HasColumnType("int");

                    b.Property<string>("ModeOfDelivery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OfferingType")
                        .HasColumnType("int");

                    b.Property<int?>("PendingNumberStudents")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryCodeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ResultExpected")
                        .HasColumnType("bit");

                    b.Property<int?>("ResultValueType")
                        .HasColumnType("int");

                    b.Property<int?>("ResultWeight")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TeachingLanguage")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("OfferingId");

                    b.ToTable("ComponentOfferings", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.ComponentOfferingAddress", b =>
                {
                    b.Property<Guid>("ComponentOfferingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ComponentOfferingId", "AddressId");

                    b.HasIndex("AddressId");

                    b.ToTable("ComponentOfferingsAddresses", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.Consumer", b =>
                {
                    b.Property<Guid>("ConsumerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademicSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssociationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuildingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ComponentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ComponentOfferingOfferingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConsumerKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseOfferingOfferingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NewsFeedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NewsItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProgramId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProgramOfferingOfferingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ConsumerId");

                    b.HasIndex("AcademicSessionId");

                    b.HasIndex("AssociationId");

                    b.HasIndex("BuildingId");

                    b.HasIndex("ComponentId");

                    b.HasIndex("ComponentOfferingOfferingId");

                    b.HasIndex("CourseId");

                    b.HasIndex("CourseOfferingOfferingId");

                    b.HasIndex("GroupId");

                    b.HasIndex("NewsFeedId");

                    b.HasIndex("NewsItemId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PersonId");

                    b.HasIndex("ProgramId");

                    b.HasIndex("ProgramOfferingOfferingId");

                    b.HasIndex("RoomId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Consumers", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.Cost", b =>
                {
                    b.Property<Guid>("CostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AmountWithoutVat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ComponentOfferingOfferingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CostType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CourseOfferingOfferingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayAmount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProgramOfferingOfferingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VatAmount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CostId");

                    b.HasIndex("ComponentOfferingOfferingId");

                    b.HasIndex("CourseOfferingOfferingId");

                    b.HasIndex("ProgramOfferingOfferingId");

                    b.ToTable("Costs", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.Course", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("AdmissionRequirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Assessment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Enrollment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldsOfStudy")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("FirstStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LearningOutcomes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("ModeOfDelivery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryCodeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualificationRequirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resources")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyLoadUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudyLoadValue")
                        .HasColumnType("int");

                    b.Property<string>("TeachingLanguage")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("CourseId");

                    b.ToTable("Courses", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.CourseAddress", b =>
                {
                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CourseId", "AddressId");

                    b.HasIndex("AddressId");

                    b.ToTable("CoursesAddresses", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.CourseOffering", b =>
                {
                    b.Property<Guid>("OfferingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EnrollEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EnrollStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EnrolledNumberStudents")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FlexibleEntryPeriodEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FlexibleEntryPeriodStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("MaxNumberStudents")
                        .HasColumnType("int");

                    b.Property<int?>("MinNumberStudents")
                        .HasColumnType("int");

                    b.Property<string>("ModeOfDelivery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OfferingType")
                        .HasColumnType("int");

                    b.Property<int?>("PendingNumberStudents")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryCodeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ResultExpected")
                        .HasColumnType("bit");

                    b.Property<int?>("ResultValueType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TeachingLanguage")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("OfferingId");

                    b.ToTable("CourseOfferings", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.CourseOfferingAddress", b =>
                {
                    b.Property<Guid>("CourseOfferingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CourseOfferingId", "AddressId");

                    b.HasIndex("AddressId");

                    b.ToTable("CourseOfferingsAddresses", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.EducationSpecification", b =>
                {
                    b.Property<Guid>("EducationSpecificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abbreviation")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EducationSpecificationType")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldsOfStudy")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("FormalDocument")
                        .HasColumnType("int");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("LevelOfQualification")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PrimaryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryCodeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sector")
                        .HasColumnType("int");

                    b.Property<string>("StudyLoadUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudyLoadValue")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("EducationSpecificationId");

                    b.ToTable("EducationSpecifications", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.Group", b =>
                {
                    b.Property<Guid>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryCodeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("GroupId");

                    b.ToTable("Groups", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.LanguageOfChoice", b =>
                {
                    b.Property<Guid>("LanguageOfChoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageOfChoiceId");

                    b.HasIndex("PersonId");

                    b.ToTable("LanguageOfChoices", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.LanguageTypedString", b =>
                {
                    b.Property<Guid>("LanguageTypedStringId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademicSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageTypedStringId");

                    b.HasIndex("AcademicSessionId");

                    b.ToTable("LanguageTypedString", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.NewsFeed", b =>
                {
                    b.Property<Guid>("NewsFeedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NewsFeedType")
                        .HasColumnType("int");

                    b.HasKey("NewsFeedId");

                    b.ToTable("NewsFeeds", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.NewsItem", b =>
                {
                    b.Property<Guid>("NewsItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Authors")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NewsItemType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("NewsItemId");

                    b.ToTable("NewsItems", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.Organization", b =>
                {
                    b.Property<Guid>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Logo")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrganizationType")
                        .HasColumnType("int");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PrimaryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryCodeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("OrganizationId");

                    b.ToTable("Organizations", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.OrganizationAddress", b =>
                {
                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrganizationId", "AddressId");

                    b.HasIndex("AddressId");

                    b.ToTable("OrganizationsAddresses", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.OtherCodes", b =>
                {
                    b.Property<Guid>("OtherCodesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademicSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuildingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ComponentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ComponentOfferingOfferingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseOfferingOfferingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EducationSpecificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProgramId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProgramOfferingOfferingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OtherCodesId");

                    b.HasIndex("AcademicSessionId");

                    b.HasIndex("BuildingId");

                    b.HasIndex("ComponentId");

                    b.HasIndex("ComponentOfferingOfferingId");

                    b.HasIndex("CourseId");

                    b.HasIndex("CourseOfferingOfferingId");

                    b.HasIndex("EducationSpecificationId");

                    b.HasIndex("GroupId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PersonId");

                    b.HasIndex("ProgramId");

                    b.HasIndex("ProgramOfferingOfferingId");

                    b.HasIndex("RoomId");

                    b.ToTable("OtherCodes", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.Person", b =>
                {
                    b.Property<Guid>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("ActiveEnrollment")
                        .HasColumnType("bit");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Affiliations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfNationality")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ICEName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ICEPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ICERelation")
                        .HasColumnType("int");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Office")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoOfficial")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("PhotoSocial")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("PrimaryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryCodeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("SurnamePrefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNumber")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TitlePrefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleSuffix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.HasIndex("AddressId");

                    b.ToTable("Persons", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.Program", b =>
                {
                    b.Property<Guid>("ProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("AdmissionRequirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Assessment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Enrollment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldsOfStudy")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("FirstStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("LevelOfQualification")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("ModeOfDelivery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModeOfStudy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PrimaryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryCodeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgramType")
                        .HasColumnType("int");

                    b.Property<int?>("QualificationAwarded")
                        .HasColumnType("int");

                    b.Property<string>("QualificationRequirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sector")
                        .HasColumnType("int");

                    b.Property<string>("StudyLoadUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudyLoadValue")
                        .HasColumnType("int");

                    b.Property<string>("TeachingLanguage")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("ProgramId");

                    b.ToTable("Programs", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.ProgramAddress", b =>
                {
                    b.Property<Guid>("ProgramId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProgramId", "AddressId");

                    b.HasIndex("AddressId");

                    b.ToTable("ProgramsAddresses", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.ProgramOffering", b =>
                {
                    b.Property<Guid>("OfferingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EnrollEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EnrollStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EnrolledNumberStudents")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FlexibleEntryPeriodEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FlexibleEntryPeriodStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("MaxNumberStudents")
                        .HasColumnType("int");

                    b.Property<int?>("MinNumberStudents")
                        .HasColumnType("int");

                    b.Property<string>("ModeOfDelivery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OfferingType")
                        .HasColumnType("int");

                    b.Property<int?>("PendingNumberStudents")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryCodeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ResultExpected")
                        .HasColumnType("bit");

                    b.Property<int?>("ResultValueType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TeachingLanguage")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("OfferingId");

                    b.ToTable("ProgramOfferings", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.ProgramOfferingAddress", b =>
                {
                    b.Property<Guid>("ProgramOfferingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProgramOfferingId", "AddressId");

                    b.HasIndex("AddressId");

                    b.ToTable("ProgramOfferingsAddresses", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.Room", b =>
                {
                    b.Property<Guid>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("AvailableSeats")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Floor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Latitude")
                        .HasPrecision(8, 6)
                        .HasColumnType("decimal(8,6)");

                    b.Property<decimal?>("Longitude")
                        .HasPrecision(8, 6)
                        .HasColumnType("decimal(8,6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryCodeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoomType")
                        .HasColumnType("int");

                    b.Property<int?>("TotalSeats")
                        .HasColumnType("int");

                    b.Property<string>("Wing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.Service", b =>
                {
                    b.Property<Guid>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Documentation")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("ServiceId");

                    b.ToTable("Services", "ooapiv5");
                });

            modelBuilder.Entity("ooapi.v5.Models.Building", b =>
                {
                    b.HasOne("ooapi.v5.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("ooapi.v5.Models.ComponentAddress", b =>
                {
                    b.HasOne("ooapi.v5.Models.Address", "Address")
                        .WithMany("ComponentsAddresses")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ooapi.v5.Models.Component", "Component")
                        .WithMany("ComponentsAddresses")
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Component");
                });

            modelBuilder.Entity("ooapi.v5.Models.ComponentOfferingAddress", b =>
                {
                    b.HasOne("ooapi.v5.Models.Address", "Address")
                        .WithMany("ComponentOfferingsAddresses")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ooapi.v5.Models.ComponentOffering", "ComponentOffering")
                        .WithMany("ComponentOfferingsAddresses")
                        .HasForeignKey("ComponentOfferingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("ComponentOffering");
                });

            modelBuilder.Entity("ooapi.v5.Models.Consumer", b =>
                {
                    b.HasOne("ooapi.v5.Models.AcademicSession", null)
                        .WithMany("Consumers")
                        .HasForeignKey("AcademicSessionId");

                    b.HasOne("ooapi.v5.Models.Association", null)
                        .WithMany("Consumers")
                        .HasForeignKey("AssociationId");

                    b.HasOne("ooapi.v5.Models.Building", null)
                        .WithMany("Consumers")
                        .HasForeignKey("BuildingId");

                    b.HasOne("ooapi.v5.Models.Component", null)
                        .WithMany("Consumers")
                        .HasForeignKey("ComponentId");

                    b.HasOne("ooapi.v5.Models.ComponentOffering", null)
                        .WithMany("Consumers")
                        .HasForeignKey("ComponentOfferingOfferingId");

                    b.HasOne("ooapi.v5.Models.Course", null)
                        .WithMany("Consumers")
                        .HasForeignKey("CourseId");

                    b.HasOne("ooapi.v5.Models.CourseOffering", null)
                        .WithMany("Consumers")
                        .HasForeignKey("CourseOfferingOfferingId");

                    b.HasOne("ooapi.v5.Models.Group", null)
                        .WithMany("Consumers")
                        .HasForeignKey("GroupId");

                    b.HasOne("ooapi.v5.Models.NewsFeed", null)
                        .WithMany("Consumers")
                        .HasForeignKey("NewsFeedId");

                    b.HasOne("ooapi.v5.Models.NewsItem", null)
                        .WithMany("Consumers")
                        .HasForeignKey("NewsItemId");

                    b.HasOne("ooapi.v5.Models.Organization", null)
                        .WithMany("Consumers")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("ooapi.v5.Models.Person", null)
                        .WithMany("Consumers")
                        .HasForeignKey("PersonId");

                    b.HasOne("ooapi.v5.Models.Program", null)
                        .WithMany("Consumers")
                        .HasForeignKey("ProgramId");

                    b.HasOne("ooapi.v5.Models.ProgramOffering", null)
                        .WithMany("Consumers")
                        .HasForeignKey("ProgramOfferingOfferingId");

                    b.HasOne("ooapi.v5.Models.Room", null)
                        .WithMany("Consumers")
                        .HasForeignKey("RoomId");

                    b.HasOne("ooapi.v5.Models.Service", null)
                        .WithMany("Consumers")
                        .HasForeignKey("ServiceId");
                });

            modelBuilder.Entity("ooapi.v5.Models.Cost", b =>
                {
                    b.HasOne("ooapi.v5.Models.ComponentOffering", null)
                        .WithMany("PriceInformation")
                        .HasForeignKey("ComponentOfferingOfferingId");

                    b.HasOne("ooapi.v5.Models.CourseOffering", null)
                        .WithMany("PriceInformation")
                        .HasForeignKey("CourseOfferingOfferingId");

                    b.HasOne("ooapi.v5.Models.ProgramOffering", null)
                        .WithMany("PriceInformation")
                        .HasForeignKey("ProgramOfferingOfferingId");
                });

            modelBuilder.Entity("ooapi.v5.Models.CourseAddress", b =>
                {
                    b.HasOne("ooapi.v5.Models.Address", "Address")
                        .WithMany("CoursesAddresses")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ooapi.v5.Models.Course", "Course")
                        .WithMany("CoursesAddresses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("ooapi.v5.Models.CourseOfferingAddress", b =>
                {
                    b.HasOne("ooapi.v5.Models.Address", "Address")
                        .WithMany("CourseOfferingsAddresses")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ooapi.v5.Models.CourseOffering", "CourseOffering")
                        .WithMany("CourseOfferingsAddresses")
                        .HasForeignKey("CourseOfferingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("CourseOffering");
                });

            modelBuilder.Entity("ooapi.v5.Models.LanguageOfChoice", b =>
                {
                    b.HasOne("ooapi.v5.Models.Person", null)
                        .WithMany("LanguageOfChoice")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("ooapi.v5.Models.LanguageTypedString", b =>
                {
                    b.HasOne("ooapi.v5.Models.AcademicSession", null)
                        .WithMany("name")
                        .HasForeignKey("AcademicSessionId");
                });

            modelBuilder.Entity("ooapi.v5.Models.OrganizationAddress", b =>
                {
                    b.HasOne("ooapi.v5.Models.Address", "Address")
                        .WithMany("OrganizationAddresses")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ooapi.v5.Models.Organization", "Organization")
                        .WithMany("OrganizationAddresses")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("ooapi.v5.Models.OtherCodes", b =>
                {
                    b.HasOne("ooapi.v5.Models.AcademicSession", null)
                        .WithMany("OtherCodes")
                        .HasForeignKey("AcademicSessionId");

                    b.HasOne("ooapi.v5.Models.Building", null)
                        .WithMany("OtherCodes")
                        .HasForeignKey("BuildingId");

                    b.HasOne("ooapi.v5.Models.Component", null)
                        .WithMany("OtherCodes")
                        .HasForeignKey("ComponentId");

                    b.HasOne("ooapi.v5.Models.ComponentOffering", null)
                        .WithMany("OtherCodes")
                        .HasForeignKey("ComponentOfferingOfferingId");

                    b.HasOne("ooapi.v5.Models.Course", null)
                        .WithMany("OtherCodes")
                        .HasForeignKey("CourseId");

                    b.HasOne("ooapi.v5.Models.CourseOffering", null)
                        .WithMany("OtherCodes")
                        .HasForeignKey("CourseOfferingOfferingId");

                    b.HasOne("ooapi.v5.Models.EducationSpecification", null)
                        .WithMany("OtherCodes")
                        .HasForeignKey("EducationSpecificationId");

                    b.HasOne("ooapi.v5.Models.Group", null)
                        .WithMany("OtherCodes")
                        .HasForeignKey("GroupId");

                    b.HasOne("ooapi.v5.Models.Organization", null)
                        .WithMany("OtherCodes")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("ooapi.v5.Models.Person", null)
                        .WithMany("OtherCodes")
                        .HasForeignKey("PersonId");

                    b.HasOne("ooapi.v5.Models.Program", null)
                        .WithMany("OtherCodes")
                        .HasForeignKey("ProgramId");

                    b.HasOne("ooapi.v5.Models.ProgramOffering", null)
                        .WithMany("OtherCodes")
                        .HasForeignKey("ProgramOfferingOfferingId");

                    b.HasOne("ooapi.v5.Models.Room", null)
                        .WithMany("OtherCodes")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("ooapi.v5.Models.Person", b =>
                {
                    b.HasOne("ooapi.v5.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("ooapi.v5.Models.ProgramAddress", b =>
                {
                    b.HasOne("ooapi.v5.Models.Address", "Address")
                        .WithMany("ProgramsAddresses")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ooapi.v5.Models.Program", "Program")
                        .WithMany("ProgramsAddresses")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("ooapi.v5.Models.ProgramOfferingAddress", b =>
                {
                    b.HasOne("ooapi.v5.Models.Address", "Address")
                        .WithMany("ProgramOfferingsAddresses")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ooapi.v5.Models.ProgramOffering", "ProgramOffering")
                        .WithMany("ProgramOfferingsAddresses")
                        .HasForeignKey("ProgramOfferingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("ProgramOffering");
                });

            modelBuilder.Entity("ooapi.v5.Models.AcademicSession", b =>
                {
                    b.Navigation("Consumers");

                    b.Navigation("OtherCodes");

                    b.Navigation("name");
                });

            modelBuilder.Entity("ooapi.v5.Models.Address", b =>
                {
                    b.Navigation("ComponentOfferingsAddresses");

                    b.Navigation("ComponentsAddresses");

                    b.Navigation("CourseOfferingsAddresses");

                    b.Navigation("CoursesAddresses");

                    b.Navigation("OrganizationAddresses");

                    b.Navigation("ProgramOfferingsAddresses");

                    b.Navigation("ProgramsAddresses");
                });

            modelBuilder.Entity("ooapi.v5.Models.Association", b =>
                {
                    b.Navigation("Consumers");
                });

            modelBuilder.Entity("ooapi.v5.Models.Building", b =>
                {
                    b.Navigation("Consumers");

                    b.Navigation("OtherCodes");
                });

            modelBuilder.Entity("ooapi.v5.Models.Component", b =>
                {
                    b.Navigation("ComponentsAddresses");

                    b.Navigation("Consumers");

                    b.Navigation("OtherCodes");
                });

            modelBuilder.Entity("ooapi.v5.Models.ComponentOffering", b =>
                {
                    b.Navigation("ComponentOfferingsAddresses");

                    b.Navigation("Consumers");

                    b.Navigation("OtherCodes");

                    b.Navigation("PriceInformation");
                });

            modelBuilder.Entity("ooapi.v5.Models.Course", b =>
                {
                    b.Navigation("Consumers");

                    b.Navigation("CoursesAddresses");

                    b.Navigation("OtherCodes");
                });

            modelBuilder.Entity("ooapi.v5.Models.CourseOffering", b =>
                {
                    b.Navigation("Consumers");

                    b.Navigation("CourseOfferingsAddresses");

                    b.Navigation("OtherCodes");

                    b.Navigation("PriceInformation");
                });

            modelBuilder.Entity("ooapi.v5.Models.EducationSpecification", b =>
                {
                    b.Navigation("OtherCodes");
                });

            modelBuilder.Entity("ooapi.v5.Models.Group", b =>
                {
                    b.Navigation("Consumers");

                    b.Navigation("OtherCodes");
                });

            modelBuilder.Entity("ooapi.v5.Models.NewsFeed", b =>
                {
                    b.Navigation("Consumers");
                });

            modelBuilder.Entity("ooapi.v5.Models.NewsItem", b =>
                {
                    b.Navigation("Consumers");
                });

            modelBuilder.Entity("ooapi.v5.Models.Organization", b =>
                {
                    b.Navigation("Consumers");

                    b.Navigation("OrganizationAddresses");

                    b.Navigation("OtherCodes");
                });

            modelBuilder.Entity("ooapi.v5.Models.Person", b =>
                {
                    b.Navigation("Consumers");

                    b.Navigation("LanguageOfChoice");

                    b.Navigation("OtherCodes");
                });

            modelBuilder.Entity("ooapi.v5.Models.Program", b =>
                {
                    b.Navigation("Consumers");

                    b.Navigation("OtherCodes");

                    b.Navigation("ProgramsAddresses");
                });

            modelBuilder.Entity("ooapi.v5.Models.ProgramOffering", b =>
                {
                    b.Navigation("Consumers");

                    b.Navigation("OtherCodes");

                    b.Navigation("PriceInformation");

                    b.Navigation("ProgramOfferingsAddresses");
                });

            modelBuilder.Entity("ooapi.v5.Models.Room", b =>
                {
                    b.Navigation("Consumers");

                    b.Navigation("OtherCodes");
                });

            modelBuilder.Entity("ooapi.v5.Models.Service", b =>
                {
                    b.Navigation("Consumers");
                });
#pragma warning restore 612, 618
        }
    }
}
